name: Build and Test

on:
    push:
        branches: [ master, develop ]
    pull_request:
        branches: [ master, develop ]

jobs:
    build_linux:
        name: "Build and test"
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: [3.5, 3.6, 3.7, 3.8]
                exclude:
                    -   os: windows-latest
                        python-version: 3.8
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Install Bluez on Ubuntu
                run: sudo apt install -y bluez
                if: ${{ matrix.os == 'ubuntu-latest'}}
            -   name: Upgrade pip. setuptools and wheel
                run: python -m pip install --upgrade pip setuptools wheel
            -   name: Install dependencies
                run: pip install -r requirements.txt
            -   name: Install develoment dependencies
                run: pip install -r requirements_dev.txt
            -   name: Lint with flake8
                run: |
                    # stop the build if there are Python syntax errors or undefined names
                    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            -   name: Test with pytest
                run: |
                    pytest tests --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml --cov=com --cov-report=xml --cov-report=html
            -   name: Upload pytest test results
                uses: actions/upload-artifact@v1
                with:
                    name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
                    path: junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
                # Use always() to always run this step to publish test results when there are test failures
                if: ${{ always() }}
