name: Build and Test

on:
    push:
        branches: [ master, develop ]
    pull_request:
        branches: [ master, develop ]

jobs:
    build_desktop:
        name: "Build and test"
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13-dev']
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v5
                id: py
                with:
                    python-version: ${{ matrix.python-version }}
            -   name: Create virtual environment
                run: pipx run poetry env use '${{ steps.py.outputs.python-path }}'
            -   name: Install dependencies
                # work around https://github.com/python-poetry/poetry/issues/7161
                env:
                    SYSTEM_VERSION_COMPAT: 0
                run: pipx run poetry install --only main,test
            -   name: Test with pytest
                run: |
                    pipx run poetry run pytest tests --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml --cov=com --cov-report=xml --cov-report=html
            -   name: Upload pytest test results
                uses: actions/upload-artifact@v4
                with:
                    name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
                    path: junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
                # Use always() to always run this step to publish test results when there are test failures
                if: ${{ always() }}
